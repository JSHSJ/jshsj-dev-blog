---
import {Navigation} from "@/config/index.ts";

import DefaultLayout from "@/layouts/DefaultLayout.astro";
import BlogList from "@/components/BlogList.astro"
import Pagination from "@/components/Pagination.astro"
import TagFilter from "@/components/TagFilter.astro"
import { slugify } from '@/utils/slugify';
import { sortByDateDesc } from '@/utils/sortByDate';
import fs from 'node:fs/promises';
import { BlogPost } from "@/src/types/BlogPost.type";


export async function getStaticPaths({paginate, rss}) {
const title = "JSHSJ's dev blog"
const description = "Yet another developer's blog"
const currentRoute = Navigation.blogRoot.url


const allBlog = await Astro.glob<BlogPost>("/src/content/**/*.md");

const formattedBlogposts = allBlog.map(bp => ({
    ...bp.frontmatter,
    slug: slugify(bp.frontmatter.title),
})).sort(sortByDateDesc);

// CREATE SEARCH HERE
// NEEDS TO HAPPEN IN getStaticPaths

const contentForSave = await Promise.all(allBlog.map(async post => {
  const headings = await post.getHeadings()
  const content = await post.compiledContent()
  return {
    title: post.frontmatter.title,
    description: post.frontmatter.description,
    link: `${Navigation.blogPost.url}/${slugify(post.frontmatter.title)}`,
    headers: headings,
    content: content.replaceAll('\n', ''),
}
}))

const filePath = './public/search.json'

fs.writeFile(filePath, JSON.stringify(contentForSave, null, 2)).then(() => {
    console.log('File written successfully.:', filePath);
}).catch(err => {
    console.error(err);
});

const allTags = Array.from(new Set(allBlog
.map(blog => blog.frontmatter.tags)
.reduce((allTags, lang) => allTags.concat(lang), [])))

return paginate(formattedBlogposts, {
  pageSize: 10,
  props: {
    title,
    description,
    currentRoute,
    allTags
  }
})
}


const {page, title, description, currentRoute, allTags} = Astro.props;

---
<head>
  {page.url.prev && <link rel="prev" href={page.url.prev} />}
  {page.url.next && <link rel="next" href={page.url.next} />}

  <link
    rel="alternate"
    type="application/rss+xml"
    title={title + ' | RSS Feed'}
    href="/feed/blog.xml"
  />


</head>

<DefaultLayout title={title} description={description} canonical={new URL(Astro.url.pathname, Astro.site)}>
<div class="section layout-container blog-layout | mt-header">
    <h1 class="section-title -with-dot -dot-top">All the things</h1>
    <TagFilter hasReset={true} tags={allTags.map(tag => tag.toLowerCase())} tagName="Sprache" tagRootUrl="/blog/" selected="" hasPagination={true}/>

    <BlogList blogPosts={page.data}></BlogList>
    <Pagination current={page.currentPage} last={page.lastPage} next={page.url.next} prev={page.url.prev} basePath={currentRoute}></Pagination>

    <div class="note -info flow w-full">
    <p>Wanna keep up to date?</p>
    <p><a href="/feed/blog.xml">RSS Feed</a></p>
    </div>
</div>
</DefaultLayout>


